document.addEventListener('DOMContentLoaded', () => {
    initializeFileUploads();
    initializeTrainingForm();
    initializePredictionForms();
    initializeDashboard();
});

// Utility Functions
function showLoading() {
    document.getElementById('loading-spinner')?.classList.remove('hidden');
}

function hideLoading() {
    document.getElementById('loading-spinner')?.classList.add('hidden');
}

function showError(message) {
    const errorMessage = document.getElementById('error-message');
    const errorText = document.getElementById('error-text');
    if (errorMessage && errorText) {
        errorText.textContent = message;
        errorMessage.classList.remove('hidden');
        document.getElementById('success-message')?.classList.add('hidden');
    }
}

function showSuccess() {
    const successMessage = document.getElementById('success-message');
    const errorMessage = document.getElementById('error-message');
    if (successMessage && errorMessage) {
        successMessage.classList.remove('hidden');
        errorMessage.classList.add('hidden');
    }
}

// File Upload Handling
function initializeFileUploads() {
    const uploadForm = document.getElementById('upload-form');
    if (!uploadForm) return;
    
    const fileInput = document.getElementById('file-input');
    const fileInfo = document.getElementById('file-info');
    const filename = document.getElementById('filename');
    const uploadButton = document.getElementById('upload-button');
    const buttonText = document.getElementById('button-text');
    const loadingSpinner = document.getElementById('loading-spinner');
    const uploadProgress = document.getElementById('upload-progress');
    const progressBar = document.getElementById('progress-bar');
    const progressText = document.getElementById('progress-text');
    
    function resetForm() {
        uploadForm.reset();
        fileInfo.classList.add('hidden');
        uploadProgress.classList.add('hidden');
        progressBar.style.width = '0%';
        progressText.textContent = 'Uploading...';
        buttonText.textContent = 'Upload File';
        loadingSpinner.classList.add('hidden');
        uploadButton.disabled = false;
    }
    
    function handleFileSelection(files) {
        if (files.length > 0) {
            const file = files[0];
            const validTypes = ['.csv', '.xlsx'];
            
            if (!validTypes.some(type => file.name.toLowerCase().endsWith(type))) {
                showError('Please upload a CSV or Excel (.xlsx) file');
                return false;
            }

            fileInput.files = files;
            updateFileInfo();
            document.getElementById('error-message')?.classList.add('hidden');
            document.getElementById('success-message')?.classList.add('hidden');
            return true;
        }
        return false;
    }
    
    // Handle drag and drop
    const dropZone = uploadForm.querySelector('.border-dashed');
    if (dropZone) {
        dropZone.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropZone.classList.add('border-blue-500', 'bg-blue-50');
        });
        
        dropZone.addEventListener('dragleave', () => {
            dropZone.classList.remove('border-blue-500', 'bg-blue-50');
        });
        
        dropZone.addEventListener('drop', (e) => {
            e.preventDefault();
            dropZone.classList.remove('border-blue-500', 'bg-blue-50');
            handleFileSelection(e.dataTransfer.files);
        });
    }
    
    // Handle file selection
    fileInput.addEventListener('change', () => {
        handleFileSelection(fileInput.files);
    });
    
    function updateFileInfo() {
        if (fileInput.files.length > 0) {
            filename.textContent = fileInput.files[0].name;
            fileInfo.classList.remove('hidden');
        }
    }
    
    // Handle form submission
    uploadForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const file = fileInput.files[0];
        if (!file) {
            showError('Please select a file to upload');
            return;
        }
        
        const formData = new FormData();
        formData.append('file', file);
        
        // Update UI for upload start
        uploadButton.disabled = true;
        buttonText.textContent = 'Uploading...';
        loadingSpinner.classList.remove('hidden');
        uploadProgress.classList.remove('hidden');
        document.getElementById('error-message')?.classList.add('hidden');
        document.getElementById('success-message')?.classList.add('hidden');
        
        try {
            const xhr = new XMLHttpRequest();
            xhr.open('POST', '/upload', true);
            
            // Handle progress
            xhr.upload.onprogress = (e) => {
                if (e.lengthComputable) {
                    const percentComplete = (e.loaded / e.total) * 100;
                    progressBar.style.width = percentComplete + '%';
                    progressText.textContent = `Uploading... ${Math.round(percentComplete)}%`;
                }
            };
            
            // Handle response
            xhr.onload = () => {
                if (xhr.status === 200) {
                    showSuccess();
                    setTimeout(resetForm, 3000); // Reset form after 3 seconds
                } else {
                    const error = xhr.responseText ? JSON.parse(xhr.responseText).error : 'Upload failed';
                    showError(error);
                    uploadButton.disabled = false;
                    buttonText.textContent = 'Try Again';
                    loadingSpinner.classList.add('hidden');
                }
            };
            
            // Handle network errors
            xhr.onerror = () => {
                showError('Network error occurred. Please try again.');
                uploadButton.disabled = false;
                buttonText.textContent = 'Try Again';
                loadingSpinner.classList.add('hidden');
            };
            
            xhr.send(formData);
        } catch (error) {
            showError('An unexpected error occurred');
            uploadButton.disabled = false;
            buttonText.textContent = 'Try Again';
            loadingSpinner.classList.add('hidden');
        }
    });
}

// Training Form Handling
function initializeTrainingForm() {
    const form = document.getElementById('training-form');
    if (!form) return;

    // Training form initialization code will be added here
}

// Prediction Forms Handling
function initializePredictionForms() {
    const batchForm = document.getElementById('batch-predict-form');
    const singleForm = document.getElementById('single-predict-form');
    
    if (!batchForm && !singleForm) return;

    // Prediction forms initialization code will be added here
}

// Dashboard Initialization
function initializeDashboard() {
    const dashboard = document.querySelector('.dashboard');
    if (!dashboard) return;

    // Dashboard initialization code will be added here
}
